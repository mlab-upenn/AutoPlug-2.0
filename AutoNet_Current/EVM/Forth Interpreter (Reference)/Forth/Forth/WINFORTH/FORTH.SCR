\ FORTH.SCR                                      13:57 02/13/93                                                                 Source code utilities and examples for LMI WinForth 1.0                                                                         Copyright (c) 1986-1993                                         Laboratory Microsystems, Inc.                                   All Rights Reservedello, World                                   00:01 10/02/92                                                                 \ This example is used in Section I of the WinForth manual ...                                                                  : HELLO ( -- )                                                     CR                                       \ start of new line    ." Hello, World!"                         \ display a string    CR ;                                      \ another new lineimer module                                 1 14:11 06/05/91 ( !TIMER and .TIMER can be used for precise timing of bench- )  ( marks etc.  All calculations are done at the display end )    ( for minimal impact on the events being timed. )               FORTH DEFINITIONS DECIMAL                                                                                                       2VARIABLE DSECS                  ( contains @TIME from !TIMER )                                                                 ( @time --- deciseconds )                                       : DHMS>DSECS    SWAP >R DUP >R  255 AND 0        ( hundredths )                 R> >< 255 AND 100 M* D+           ( + seconds )                 R@ >< 255 AND 60 *               ( hours * 60 )                 R> 255 AND +                      ( + minutes )                 6000 M*                 ( dsec=minutes * 6000 )                 D+ ;               ( return total deciseconds ) -->                                                             \ Timer module                                 1 14:11 06/05/91                                                                 ( --- ; start timer )                                           : !TIMER        @TIME  DSECS 2!  ;                                                                                              ( --- d ;  return elapsed time since last execution of !TIMER ) (          as double integer, hundredths of seconds )           : @TIMER        @TIME  DHMS>DSECS                                               DSECS   2@     DHMS>DSECS  D-  ;                                                                                ( --- ; display elapsed time in hundredths of seconds )         (       since last execution of !TIMER )                        : .TIMER        @TIMER  <#  # # ASCII . HOLD #S #> TYPE SPACE ;                                                                                                                                                                                                 \ Random number generator                        10:12 11/07/86                                                                 \ Given an argument, returns a pseudo-random number between     \  0 and that argument.  The pseudo-random sequence can be      \  altered by changing the seed.                                                                                                VARIABLE SEED                                                                                                                   : random ( -- n )                             \ 0 <= n <= 32767    SEED @ 259 * 3 + 32767 AND                                      DUP SEED ! ;                                                                                                                 : RANDOM ( n1 -- n2 )                            \ 0 <= n2 < n1    random M* 32768 UM/MOD NIP ;                                                                                                                                                                 \ Evaluate an arbitrary string             .     00:01 10/02/92                                                                 \ ^string --- ; interprets a counted string                     \ note : needs system original vWORD vector when compiled       : EVAL          STATE @ >R  vWORD @ >R                                          BLK @   >R  >IN   @ >R  SOURCE >R >R                            COUNT  2EQU SOURCE                                              >IN OFF  BLK OFF  STATE OFF                                     [ vWORD @ ] LITERAL vWORD ! INTERPRET                           R> R>  2EQU SOURCE  R> >IN !  R> BLK !                          R> vWORD !          R> STATE ! ;                                                                                                                                                                                                                                                                                                                                                \ Screen to text file conversion using DOSINT    15:20 08/21/86 FORTH DEFINITIONS DECIMAL   DOSINT                                                                                              HCB IFILE               ( handle control block for input file ) HCB OFILE              ( handle control block for output file )                                                                 VARIABLE BUFF    128 ALLOT            ( buffer for input file )                                                                 13 CONSTANT ASCII_CR                        ( carriage return ) 10 CONSTANT ASCII_LF                              ( line feed )                                                                 ( hcb --- )                                                     : INPUT-FILENAME    HERE 30 EXPECT             ( read console )   HERE SPAN @ STRPCK  SWAP NAME>HCB ;                           -->                                                                                                                             \ Screen to text file conversion using DOSINT    15:20 08/21/86                                                                 ( --- )                                                         : GET_FILE_NAMES                                                  BEGIN   CR CR ." Enter name of source file:      "                      IFILE INPUT-FILENAME                                            CR ." Enter name of destination file: "                         OFILE INPUT-FILENAME    CR                                      CR ." Source file      = " IFILE HCB>N .FILE                    CR ." Destination file = " OFILE HCB>N .FILE                    CR CR ." OK? " KEY   DUP EMIT  32 OR    ASCII y =       UNTIL   CR CR ;                                               -->                                                                                                                                                                                                                                                             \ Screen to text file conversion using DOSINT    15:20 08/21/86                                                                 ( --- )                                                         : OPEN_FILES    IFILE O_RD FOPEN                                                IF   CR ." Source file not found" CR QUIT                       THEN OFILE 0 FMAKE                                              IF   CR ." Can't make destination filecreen to text file conversion using DOSINT    15:20 08/21/86                                                                 ( --- length )                                                  : READ_FORTH_LINE   IFILE BUFF 64 FREAD ;                                                                                       ( --- length )                                                  : FORTH_TO_TXT      BUFF  64 -TRAILING SWAP DROP                                    ASCII_CR OVER BUFF  + C! 1+                                     ASCII_LF OVER BUFF  + C! 1+ ;                                                                               ( length --- )                                                  : WRITE_TXT_LINE    >R OFILE BUFF  R@ FWRITE  R> <>                                 IF CR ." Destination media is full"                             CR CLOSE_FILES QUIT THEN ;                  -->                                                                                                                             \ Screen to text file conversion using DOSINT    13:43 06/22/91 ( --- )                                                         : S2T           CR ." Convert screen file to standard text file"                GET_FILE_NAMES  OPEN_FILES                                      CR ." Processing..."                                            BEGIN  READ_FORTH_LINE                                          WHILE  FORTH_TO_TXT  WRITE_TXT_LINE                             REPEAT CR CR                                                    IFILE 0. 2 FSEEK                                                CR ." Source file =      " D.  ." bytes"                        OFILE 0. 2 FSEEK                                                CR ." Destination file = " D. ." bytes"                         CLOSE_FILES                                                     CR CR ." Conversion completed." CR CR ;                                                                                                                                         \ Text to screen file conversion using DOSINT    15:20 08/21/86 FORTH DEFINITIONS DECIMAL       DOSINT                                                                                          HCB IFILE               ( handle control block for input file ) HCB OFILE              ( handle control block for output file )                                                                 CREATE BUFF 128 ALLOT                   ( buffer for file i/o ) VARIABLE TEMP                                                                                                                   13 CONSTANT ASCII_CR                        ( carriage return ) 10 CONSTANT ASCII_LF                              ( line feed )                                                                 ( hcb --- )                                                     : INPUT-FILENAME    HERE 30 EXPECT ( read console )                             HERE SPAN @ STRPCK  SWAP NAME>HCB ;             -->                                                             \ Text to screen file conversion using DOSINT    15:20 08/21/86                                                                 ( --- )                                                         : GET_FILE_NAMES                                                        BEGIN   CR                                                      CR ." Enter name of source file:      "                         IFILE INPUT-FILENAME                                            CR ." Enter name of destination file: "                         OFILE INPUT-FILENAME    CR                                      CR ." Source file      = " IFILE HCB>N .FILE                    CR ." Destination file = " OFILE HCB>N .FILE                    CR CR ." OK? " KEY   DUP EMIT  32 OR    ASCII y =               UNTIL   CR CR ;                                         -->                                                                                                                                                                                             \ Text to screen file conversion using DOSINT    15:20 08/21/86 ( --- )                                                         : OPEN_FILES    IFILE O_RD FOPEN                                                IF   CR ." Source file not found" CR QUIT                       THEN OFILE 0 FMAKE                                              IF   CR ." Can't make destination file" CR                           IFILE FCLOSE DROP QUIT THEN ;                                                                              ( --- )                                                         : CLOSE_FILES   IFILE FCLOSE DROP  OFILE FCLOSE DROP ;                                                                          ( --- )                                                         : WRITE_FORTH_LINE      OFILE BUFF 64 FWRITE 64 <>                              IF   CR ." Destination media is full"                                CR CLOSE_FILES QUIT  THEN ;                -->                                                             \ Text to screen file conversion using DOSINT    15:20 08/21/86                                                                 ( --- status ; 0 or EOF )                                       : READ_TXT_LINE  BUFF 128 BLANK     0                                   BEGIN   IFILE TEMP 1 FREAD 0=                                           IF   DROP FALSE EXIT  ( end of file, return F )                 THEN                                                            TEMP C@  ASCII_CR =    ( if return, line done )                 IF   DROP TRUE EXIT         ( return status=T )                 THEN TEMP C@ ASCII_LF <> ( discard line feeds )                 IF   TEMP C@  OVER BUFF +  C!  1+                               THEN                                                    AGAIN ;                                                 -->                                                                                                                                                                                             \ Text to screen file conversion using DOSINT    13:44 06/22/91                                                                 : T2S           CR ." Convert TEXT file to SCREEN file"                         GET_FILE_NAMES  OPEN_FILES                                      CR ." Processing..."                                            BEGIN  READ_TXT_LINE                                            WHILE  WRITE_FORTH_LINE                                         REPEAT CR CR  IFILE 0. 2 FSEEK                                  CR ." Source file =      " D.  ." bytes"                        OFILE  0. 2 FSEEK                                               CR ." Destination file = " D. ." bytes"                         CLOSE_FILES                                                     CR CR ." Conversion completed." CR CR ;                                                                                                                                                                                                         \ 87>SFP   8087 to LMI SFP format conversion     14:24 08/12/86                                                                 ASM HEX                                                         CODE 87>SFP ( r1 -- r2 )            \ converts 8087 to SFP real      AX POP  DX POP  BX POP  CX, # 204 MOV                           DI, BX MOV  DI, CL SHR  DI, # 7FF AND       \ shift 4 bits      DI, # 3FF SUB  DI INC                        \ DI=exponent      BH, # 80 AND  BH, # 40 OR     \ mant bits 31 (sign) and 30      BL, CL SHL  CH, CL XCHG  BH, CL ROL        \ rotate 2 bits      CH, CL XCHG  BX, CL SHL                     \ shift 4 bits      BL, DH MOV  DH, DL MOV  DL, AH MOV                              AL, 1 SHL  DX, 1 RCL  BX, 1 RCL                                 AL, 1 SHL  DX, 1 RCL  BX, 1 RCL                                 DX PUSH  BX PUSH  BX, DI MOV                                    NEXT,  END-CODE                                            DECIMAL -->                                                     \ SFP>87   LMI SFP to 8087 format conversion     14:24 08/12/86                                                                 HEX                                                             CODE SFP>87 ( r1 -- r2 )            \ converts SFP to 8087 real      AX POP  DX POP           \ BX=exp, AX=hi mant, DX=low mant      DI, AX MOV  DI, # 8000 AND                   \ DI=sign bit      BX, # 3FF ADD  BX DEC          \ BX=11-bit biased exponent      CL, # 4 MOV  BX, CL SHL  DI, BX OR      \ DI=sign|exponent      DX, 1 SHL  AX, 1 RCL          \ discard sign bit from mant      DX, 1 SHL  AX, 1 RCL        \ discard explicit integer bit      AX, CL ROL  BX, AX MOV  AL, # F0 AND  BX, # 0F AND              DI, BX OR  DI PUSH                  \ push 8087 bits 63-48      DX, CL ROL  BX, DX MOV  DL, # F0 AND  BX, # 0F AND              AL, BL OR  AX PUSH  DX PUSH  BX, BX XOR  \ push bits 47-38      NEXT, END-CODE                                             DECIMAL                                                         \ Eratosthenes sieve benchmark program           14:43 09/04/86                                                                 FORTH DEFINITIONS DECIMAL                                       8190 CONSTANT SIZE      CREATE FLAGS    SIZE ALLOT              : DO-PRIME   FLAGS SIZE 1 FILL                                               0 SIZE 0                                                        DO   FLAGS I + C@                                                    IF    I DUP + 3 + DUP I +                                             BEGIN   DUP SIZE <                                              WHILE   0 OVER FLAGS + C! OVER +                                REPEAT  DROP DROP 1+                                      THEN                                                       LOOP                                                       .  ." Primes " ;                                        : BENCHMARK  !TIMER  10 0 DO DO-PRIME LOOP ." Time: " .TIMER ;                                                                  \ Interface Age benchmark       FORTH Dimensions 13:43 06/22/91 ( enter: 1000 BENCH <return> )                                  : BENCH DUP 2 / 1+ SWAP CR ." Starting " CR !TIMER                      1 DO DUP I 1 ROT                                                  2 DO DROP DUP I /MOD                                               DUP 0= IF DROP DROP 1 LEAVE                                        ELSE 1 = IF DROP 1                                                ELSE DUP 0 > IF DROP 1                                            ELSE 0= IF 0 LEAVE                                              THEN                                                          THEN                                                          THEN                                                          THEN                                                         LOOP                                                            IF 4 .R ELSE DROP THEN                                       LOOP DROP CR ." Time: "  .TIMER CR ;                    \ Savage benchmark                               10:56 09/04/86                                                                 \ The infamous "Savage" floating point benchmark as seen in DDJ                                                                 : (FN)        FDUP F* FSQRT FLN FALN FATAN FTAN ;               : FN          2500 1 DO (FN) 1.E0 F+ LOOP ;                     : SAVAGE      1.E0 !TIMER FN  CR .TIMER CR ." Resultemo                            19:46 07/07/87 \ This example deletes all files with the extension .BAK        DOSINT                                                          HCB WILD_SPEC  " *.BAK" WILD_SPEC NAME>HCB                      HCB TEMP_HCB                                                                                                                    : DELETE-BAK   ( --- )                                                  WILD_SPEC TEMP_HCB 0 FFIRSTF IF                                     CR ." No files found."                                      ELSE                                                                BEGIN                                                               CR TEMP_HCB .FNAME                                              TEMP_HCB FDEL IF ."  not" THEN ."  deleted."                    TEMP_HCB FNEXTF                                             UNTIL                                                       THEN CR ;                                               \ ;CODE demo                                     23:50 12/08/87                                                                 \ Equivalent examples of a 2-dimensional array defining word    \ with runtime code in high level Forth and assembler.                                                                          \ Arrays are created by:  #elements ARRAY <name>                \ Arrays are indexed by:  element <NAME>  which leaves address                                                                  \ For example, you could declare an array with 20 elements      \       20 ARRAY FRED                                           \ Then, to access the 8'th element of FRED, you would execute   \       8 FRED                                                  \ which leaves the address of the 8'th cell on the stack for    \ access with @ or ! .                                                                                                                                                                          \ ;CODE demo                                     23:50 12/08/87 ASM                                                                                                                             \ 2-dimensional array defining word with runtime in high level  : ARRAY1    CREATE  HERE SWAP WSIZE * DUP ALLOT ERASE                       DOES>   SWAP WSIZE * + ;                                                                                            \ 2-dimensional array defining word with runtime in assembler   : ARRAY2    CREATE  HERE SWAP WSIZE * DUP ALLOT ERASE                       ;CODE   TOS, 1 SHL                 \ *2 =  WSIZE *                      TOS, DI ADD  NEXT,  END-CODE                                                                                20 ARRAY1 TEST1                                                 20 ARRAY2 TEST2                                                                                                                                                                                 \ READLN demo                                    20:57 10/13/87                                                                 ( used in the form:  FTYPE <name>  to display a text file )     : FTYPE     BL WORD 0 open DUP -1 = ABORT" Can't find file"                 BEGIN   DUP readln DUP                                          WHILE   CR  COUNT TYPE                                          REPEAT  DROP  close DROP                                        CR ." <End of Fileloating point demo                            00:46 12/25/94                                                                 \ Load SFP or I8087 before compiling this demo ...                                                                              : FPDEMO ( -- )                                                    CR ." WinForth floating point division:"                        3 2 GOTOXY  11 1 DO  I 7 .R  LOOP             \ column heads    4 PLACES                             \ show 3 decimal places    21 1 DO                                                           CR  I 2 .R  2 SPACES                          \ row number      11 1 DO  I S>F  J S>F  F/  7 F.R      \ 1 row of quotients           LOOP                                                          LOOP                                                       CR ;                                                                                                                                                                                         \ Display TCBs                                   00:46 12/25/94                                                                 FORTH DEFINITIONS DECIMAL                                       ( n --- )                                                       : TAB           OUT @ - 0 MAX SPACES ;                                                                                          ( n --- ; display a number in hexadecimal )                     : H4.           BASE @ >R   HEX                                                 0 <# # # # # #>  TYPE ASCII H EMIT                              R> BASE ! ;                                                                                                     -->                                                                                                                                                                                                                                                                                                                             \ Display TCBs                                   00:46 12/25/94                                                                 ( n --- ; display current state of TCB )                        : .TCBSTATE                                                                CASE                                                             -1  OF  ." Asleep"  ENDOF                                       0   OF  ." Awake "  ENDOF                                       ( <>0, <>-1)  ." Delayisplay TCBs                                   00:46 12/25/94                                                                 ( tcb --- ; display one task control block )                    : .TCB      CR  DUP H4. 6 TAB  DUP BODY> >NAME .NAME 22 TAB                 DUP 2+ @ .TCBSTATE                                              30 TAB                                                          DUP  6 + @  OVER 10 + @ - H4. \ return stack size               40 TAB  DUP  10 + @  H4.        \ data stack size               50 TAB  DUP  14 + @  H4.         \ stack selector               4 + @ ?DUP                                                      IF   CR 6 TAB ." owned by " >NAME .NAME THEN ;      -->                                                                                                                                                                                                                                                                                                                             \ Display TCBs                                   00:46 12/25/94                                                                 ( --- )                                                         : .TASKS        CR CR                                                           30 TAB  ." Ret Stk" 40 TAB ." Data Stk"                         50 TAB  ." Stack"                                               CR  ." Task Control Block" 22 TAB ." State"                     30 TAB   ." Size"  40 TAB ." Size"                              50 TAB   ." Selector"  CR                                       OPERATOR DUP                     \ head_tcb tcb                 BEGIN   DUP .TCB             \ display this tcb                         @ 2DUP =          \ go to next in chain                 UNTIL                                                           2DROP CR ;                                                                                                                                                                      